Day 18 : 14 July, 10:29 PM
Studied about Convolutional neural network and downloaded the Eye disease dataset from kaggle and started with image pre-processing for training a CNN for predicting eye diseases. 

Day 17 : 13 July, 11:10 PM
1. Studied Private Deep Learning with MPC using this link https://mortendahl.github.io/2017/04/17/private-deep-learning-with-mpc/
2. Started working on the PySyft issue related to Web Sockets https://github.com/OpenMined/PySyft/issues/2281

Day 16 : 12 July, 11:57 PM
Explored the PySyft's local autograd functionality and read about secured multi-party computation as a follow-up to the encrypted deep learning lesson 9.

Day 15 : 11 July, 11:20 PM
1. Completed the video lectures of Lesson 9 : Encrypted deep learning
2. Converted my earlier implementation of federated learning using a secured aggregrator into an encrypted federated learning using a crypto provider. Code is uploaded on my github repository -   https://github.com/amit-rastogi/60DaysofUdacity/blob/master/EncryptedDeepLearning/EncryptedFederatedLearning.ipynb 

Day 14 : 10 July, 9:54 PM 
1. Continued with Lesson 9 : Encrypted deep learning
2. Started reading about image classification using pre-trained models in pytorch.

Day 13 : 9 July, 11:24 PM
1. Continued with studying the PySyft's web socket server and client implementations for federated learning.
2. Picked up a bug from PySyft issue list related to Web Sockets to work on. https://github.com/OpenMined/PySyft/issues/2281
3. Created a daily update log of #60daysofudacity challenge in my github repository https://github.com/amit-rastogi/60DaysofUdacity.git

Day 12 : 8 July, 11:41 PM
1. Continued with Lesson 9 - Encrypted deep learning. Completed lectures till "Project Demo - Build an Encrypted Database"
2. Studied about web sockets w.r.t the PySyft websocket federated learning implementation

Day 11 : 7 July, 8:57 PM
1. Started with Lesson 9 - Encrypted deep learning
2. Joined the study group "INTRO (AI Challenge Study Group)"
3. Studied the PySyft WebSocket federated learning example https://github.com/OpenMined/PySyft/tree/dev/examples/tutorials/advanced/websockets-example-MNIST

Day 10 : 6 July, 11:16 PM
1. Completed Lesson  6 - "Differential privacy for deep learning". Implemented final project for this lesson to train a model on a dummy public unlabelled image dataset using private labels as per the hospital example given in this lesson. Code uploaded on my github account https://github.com/amit-rastogi/60DaysofUdacity/blob/master/DifferentialPrivacyForDeepLearning/FinalProject_DifferentialPrivacyForDeepLearning.ipynb
2. Worked on my PySyft PR https://github.com/OpenMined/PySyft/pull/2339
3. Today I would like to encourage @Arka and @Droid

Day 9 : 5 July, 9:36 PM
1. Continued with Lesson  6 - "Differential privacy for deep learning"
2. Worked on an OpenMined PySyft issue https://github.com/OpenMined/PySyft/issues/2333

The below updates have been taken from the #60daysofudacity slack channel archive 

Day 8 : 4 July, 22:56
1. Continued with Lesson 6 - "Differential privacy for deep learning". Specifically completed chapters 6.3 (generating differentially private labels for dataset) and 6.4 (PATE analysis)
2. Worked on adding version attribute to syft so that PySyft users could use syft._version_ to retrieve the version of PySyft they are using. Created a PR for the same https://github.com/OpenMined/PySyft/pull/2335

Day 7 : 3 July, 23:03
1. Started with Lesson 6 - Differential privacy for deep learning.
2. Studied about pytorch autograd and debugged some code using basic operations on autograd enabled tensors to understand autograd

Day 6 : 2 July, 22:54
1. Completed lesson 5 "Introducing Local and Global Differential Privacy". Implemented the project demo to create a differentially private query using laplacian noise. Code uploaded on github. https://github.com/amit-rastogi/60DaysofUdacity/blob/master/DifferentialPrivacy/GlobalDifferentialPrivacy.ipynb
2. My first PR for the Openmined Grid project also got approved and merged into the dev branch - https://github.com/OpenMined/Grid/pull/250

Day 5: 1 July, 20:12
Continued on Lesson 5. Covered how to vary the amount of noise to be added for local differential privacy and de-skew results appropriately. Updated my code on github https://github.com/amit-rastogi/60DaysofUdacity/blob/master/DifferentialPrivacy/LocalDifferentialPrivacy.ipynb

Day 4: 30 June, 21:28
Completed lesson 4 "Evaluating the privacy of a function". Started lesson 5 "Introducing Local and Global Differential Privacy". Implemented project demo for local differential privacy and uploaded on github https://github.com/amit-rastogi/60DaysofUdacity/blob/master/DifferentialPrivacy/LocalDifferentialPrivacy.ipynb

Day 3: 29 June, 21:04
Completed the project demo for "Federated learning with Trusted aggregrator" in Lesson 8.2. Implemented code to train a fully connected 2 layer binary classifier model on a toy dataset using federated learning on remote workers and aggregrating the trained models on a trusted worker. Code uploaded on my github repository https://github.com/amit-rastogi/60DaysofUdacity/blob/master/SecuringFederatedLearning/FederatedLearningWithTrustedAggregrator.ipynb

Day 2: 28 June, 23:33
Day 2: Completed lesson 3 "Introducing differential privacy" and started with lesson 4 "Evaluating the privacy of a function". Created sample program for empirical calculation of sensitivity of a sum and mean query. I am uploading my sample programs to my github repository https://github.com/amit-rastogi/60DaysofUdacity.git

Day 1: 27 June, 21:06
Took the pledge for the #60DaysofUdacity challenge starting today.
Day 1: Started going through the OpenMined Grid project. Did the code setup on my machine and debugged the sample code. Grid is a peer-to-peer network of data owners and data scientists who can collectively train AI models using PySyft.
https://github.com/OpenMined/Grid
